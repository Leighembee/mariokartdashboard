{"ast":null,"code":"var _jsxFileName = \"/Users/leighblechman/Desktop/marioClient/app/src/components/Summary/PlayerStatistics.js\";\nimport React from 'react';\nimport { PieChart, Pie, Tooltip, Legend } from 'recharts';\nimport data from '../../data';\nimport { sortedWinnerData, sortedChampWinnerData } from '../../utils/dataHelpers';\n\nvar _ = require('lodash/core'); // overall winners data\n\n\nvar flattenRaces = _.flattenDeep(_.map(data.Heats, 'races'));\n\nvar winnersData = sortedWinnerData(flattenRaces);\nvar topThree = winnersData.slice(0, 3); // championship winners data\n\nvar flattenHeats = _.flattenDeep(_.map(data.Heats));\n\nvar champsData = sortedChampWinnerData(flattenHeats);\nvar topThreeChamps = champsData.slice(0, 3);\nvar colors = ['#4ce1b6', '#70bbfd', '#ff4861', '#4ce1b6', '#70bbfd', '#ff4861', '#4ce1b6', '#70bbfd', '#ff4861'];\nvar style = {\n  top: 30,\n  left: 240,\n  width: 150,\n  lineHeight: '24px'\n};\n\nvar PlayerStatistics = function PlayerStatistics() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"tracks_stats_container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"tracks_stats\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"chart_title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Top Overall Wins\"), React.createElement(PieChart, {\n    width: 240,\n    height: 220,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Tooltip, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(Pie, {\n    data: topThree.map(function (val, i) {\n      return {\n        name: val[0],\n        value: val[1],\n        fill: colors[i]\n      };\n    }),\n    dataKey: \"value\",\n    cx: 110,\n    cy: 110,\n    innerRadius: 60,\n    outerRadius: 80,\n    label: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(Legend, {\n    layout: \"vertical\",\n    verticalAlign: \"middle\",\n    wrapperStyle: style,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Top Championship Wins\"), React.createElement(PieChart, {\n    width: 240,\n    height: 250,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Tooltip, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(Pie, {\n    data: topThreeChamps.map(function (val, i) {\n      return {\n        name: val[0],\n        value: val[1].value,\n        fill: colors[i]\n      };\n    }),\n    dataKey: \"value\",\n    cx: 110,\n    cy: 110,\n    innerRadius: 60,\n    outerRadius: 80,\n    label: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(Legend, {\n    layout: \"vertical\",\n    verticalAlign: \"middle\",\n    wrapperStyle: style,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: \"tracks_stats_container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"tracks_stats\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Top Overall Wins\"), React.createElement(PieChart, {\n    width: 240,\n    height: 220,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(Tooltip, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(Pie, {\n    data: topThree.map(function (val, i) {\n      return {\n        name: val[0],\n        value: val[1],\n        fill: colors[i]\n      };\n    }),\n    dataKey: \"value\",\n    cx: 110,\n    cy: 110,\n    innerRadius: 60,\n    outerRadius: 80,\n    label: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(Legend, {\n    layout: \"vertical\",\n    verticalAlign: \"middle\",\n    wrapperStyle: style,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Top Championship Wins\"), React.createElement(PieChart, {\n    width: 240,\n    height: 250,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(Tooltip, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), React.createElement(Pie, {\n    data: topThreeChamps.map(function (val, i) {\n      return {\n        name: val[0],\n        value: val[1].value,\n        fill: colors[i]\n      };\n    }),\n    dataKey: \"value\",\n    cx: 110,\n    cy: 110,\n    innerRadius: 60,\n    outerRadius: 80,\n    label: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), React.createElement(Legend, {\n    layout: \"vertical\",\n    verticalAlign: \"middle\",\n    wrapperStyle: style,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  })))));\n};\n\nexport default PlayerStatistics;","map":{"version":3,"sources":["/Users/leighblechman/Desktop/marioClient/app/src/components/Summary/PlayerStatistics.js"],"names":["React","PieChart","Pie","Tooltip","Legend","data","sortedWinnerData","sortedChampWinnerData","_","require","flattenRaces","flattenDeep","map","Heats","winnersData","topThree","slice","flattenHeats","champsData","topThreeChamps","colors","style","top","left","width","lineHeight","PlayerStatistics","val","i","name","value","fill"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  PieChart, Pie, Tooltip, Legend,\n} from 'recharts';\n\nimport data from '../../data';\nimport { sortedWinnerData, sortedChampWinnerData } from '../../utils/dataHelpers';\n\nconst _ = require('lodash/core');\n\n// overall winners data\nconst flattenRaces = _.flattenDeep(_.map(data.Heats, 'races'));\nconst winnersData = sortedWinnerData(flattenRaces);\nconst topThree = winnersData.slice(0, 3);\n\n// championship winners data\nconst flattenHeats = _.flattenDeep(_.map(data.Heats));\nconst champsData = sortedChampWinnerData(flattenHeats);\nconst topThreeChamps = champsData.slice(0, 3);\n\nconst colors = ['#4ce1b6', '#70bbfd', '#ff4861', '#4ce1b6', '#70bbfd', '#ff4861', '#4ce1b6', '#70bbfd', '#ff4861'];\n\nconst style = {\n  top: 30,\n  left: 240,\n  width: 150,\n  lineHeight: '24px',\n};\n\nconst PlayerStatistics = () => (\n\n  <div>\n    <div className=\"tracks_stats_container\">\n      <div className=\"tracks_stats\">\n        <p className=\"chart_title\">Top Overall Wins</p>\n        <PieChart width={240} height={220}>\n          <Tooltip />\n          <Pie\n            data={topThree.map((val, i) => (\n              { name: val[0], value: val[1], fill: colors[i] }\n            ))}\n            dataKey=\"value\"\n            cx={110}\n            cy={110}\n            innerRadius={60}\n            outerRadius={80}\n            label\n          />\n          <Legend layout=\"vertical\" verticalAlign=\"middle\" wrapperStyle={style} />\n        </PieChart>\n      </div>\n      <div>\n        <p>Top Championship Wins</p>\n        <PieChart width={240} height={250}>\n          <Tooltip />\n          <Pie\n            data={topThreeChamps.map((val, i) => (\n              { name: val[0], value: val[1].value, fill: colors[i] }\n            ))}\n            dataKey=\"value\"\n            cx={110}\n            cy={110}\n            innerRadius={60}\n            outerRadius={80}\n            label\n          />\n          <Legend layout=\"vertical\" verticalAlign=\"middle\" wrapperStyle={style} />\n        </PieChart>\n      </div>\n    </div>\n\n    <div className=\"tracks_stats_container\">\n      <div className=\"tracks_stats\">\n        <p>Top Overall Wins</p>\n        <PieChart width={240} height={220}>\n          <Tooltip />\n          <Pie\n            data={topThree.map((val, i) => (\n              { name: val[0], value: val[1], fill: colors[i] }\n            ))}\n            dataKey=\"value\"\n            cx={110}\n            cy={110}\n            innerRadius={60}\n            outerRadius={80}\n            label\n          />\n          <Legend layout=\"vertical\" verticalAlign=\"middle\" wrapperStyle={style} />\n        </PieChart>\n      </div>\n      <div>\n        <p>Top Championship Wins</p>\n        <PieChart width={240} height={250}>\n          <Tooltip />\n          <Pie\n            data={topThreeChamps.map((val, i) => (\n              { name: val[0], value: val[1].value, fill: colors[i] }\n            ))}\n            dataKey=\"value\"\n            cx={110}\n            cy={110}\n            innerRadius={60}\n            outerRadius={80}\n            label\n          />\n          <Legend layout=\"vertical\" verticalAlign=\"middle\" wrapperStyle={style} />\n        </PieChart>\n      </div>\n    </div>\n  </div>\n);\n\nexport default PlayerStatistics;\n"]},"metadata":{},"sourceType":"module"}